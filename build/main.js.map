{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/components/image-view/image-view.component.ts","./src/app/components/image-view/image-view.component.html","./src/app/components/image-upload/image-upload.component.ts","./src/app/components/image-upload/image-upload.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/image-edit/image-edit.component.ts","./src/app/components/image-edit/image-edit.component.html","./src/app/components/user-images/user-images.component.ts","./src/app/components/user-images/user-images.component.html","./src/app/components/image-grid/image-grid.component.ts","./src/app/components/image-grid/image-grid.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/components/image-list/image-list.component.ts","./src/app/components/image-list/image-list.component.html","./src/app/services/image.service.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'https://wp4-2.herokuapp.com/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {User} from '../../models/User';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  users: User[];\n\n  constructor(private userService: UserService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.getUsers().subscribe(users => this.users = users.body);\n  }\n\n}\n","<h1>Users</h1>\n<table class=\"table table-light text-center\">\n  <tr>\n    <th>Name</th>\n    <th>Image count</th>\n    <th></th>\n  </tr>\n  <tr *ngFor=\"let user of users\">\n    <td>{{user.username}}</td>\n    <td>{{user.imgCount}}</td>\n    <td>\n      <a class=\"btn btn-success\" href=\"/user-images/{{user.id}}/{{user.username}}\">View images</a>\n    </td>\n  </tr>\n</table>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ImageService} from '../../services/image.service';\nimport {Image} from '../../models/Image';\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\nimport {AuthService} from '../../services/auth.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-image-view',\n  templateUrl: './image-view.component.html',\n  styleUrls: ['./image-view.component.css']\n})\nexport class ImageViewComponent implements OnInit {\n  faTimes = faTimes;\n  ownImage = false;\n  sessionId: string;\n\n  id: string;\n  image: Image;\n  loading = true;\n\n  constructor(\n    private imageService: ImageService,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private router: Router) {\n    this.activatedRoute.paramMap.subscribe((data) => {\n      // @ts-ignore\n      this.id = data.params.imageId;\n    });\n    this.sessionId = this.authService.userData.userId;\n  }\n\n  ngOnInit(): void {\n    this.imageService.getImage(this.id).subscribe(image => {\n      // @ts-ignore\n      const imageBase64 = this.arrayBufferToBase64(image.body.img.data.data);\n      this.image = image.body;\n      this.image.img.data = imageBase64;\n      if (this.image.user && this.image.user.id === this.sessionId) {\n        this.ownImage = true;\n      }\n      this.loading = false;\n    });\n  }\n\n  arrayBufferToBase64(buffer): string {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n  deleteImage(id): void {\n    this.imageService.deleteImage(id).subscribe(res => {\n        if (res) {\n          this.flashMessage.show('Image deleted!', {cssClass: 'alert-success', timeout: 4000});\n\n          this.router.navigate(['/']);\n        }\n      },\n      err => this.flashMessage.show(err.message, {cssClass: 'alert-danger', timeout: 4000})\n    );\n  }\n\n}\n","<div class=\"card\" *ngIf=\"!loading\">\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <h2 class=\"col-auto mr-auto\">{{image.name}}</h2>\n      <div class=\"col-auto d-flex\" *ngIf=\"ownImage\">\n        <button class=\"btn btn-info mr-2\"><a class=\"text-decoration-none text-white\" href=\"image-edit/{{image._id}}\">\n          Update</a></button>\n        <button class=\"btn btn-danger\" (click)=\"deleteImage(image._id)\">\n          <fa-icon [icon]=\"faTimes\"></fa-icon>\n        </button>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <img class=\"col-12 col-md-8\" [src]=\"'data:image/jpg;base64,' + image.img.data\">\n      <div class=\"col-12 col-md-4\">\n        <h4>Description</h4>\n        <p>{{image.desc}}</p>\n      </div>\n    </div>\n  </div>\n</div>\n<h3 *ngIf=\"loading\">Loading...</h3>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ImageService} from '../../services/image.service';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css']\n})\nexport class ImageUploadComponent implements OnInit {\n  name: string;\n  description: string;\n  picture: string = null;\n  pictureSet = false;\n  @ViewChild('imageForm', {static: false}) form: any;\n\n  constructor(\n    private imageService: ImageService,\n    private flashMessage: FlashMessagesService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onFileChanged(event): void {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      this.picture = reader.result.toString();\n      this.pictureSet = true;\n    };\n  }\n\n  onSubmit(): void {\n    this.imageService.postImage(this.picture, this.name, this.description).subscribe(() => {\n        this.flashMessage.show('Image successfully added', {cssClass: 'alert-success', timeout: 4000});\n        this.clear();\n      },\n      err => {\n        this.flashMessage.show(err.message, {cssClass: 'alert-danger', timeout: 4000});\n      }\n    );\n  }\n\n  clear(): void {\n    this.name = '';\n    this.description = '';\n    this.picture = null;\n    this.pictureSet = false;\n  }\n}\n","<div class=\"card card-body\">\n  <form #imageForm=\"ngForm\">\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-11\"><h3>Image upload</h3></div>\n        <button (click)=\"clear()\" class=\"btn btn-warning col-1\">Clear</button>\n      </div>\n      <label>Name</label>\n      <input type=\"text\" [(ngModel)]=\"name\" [ngClass]=\"{'is-invalid':imageName.errors && imageName.touched}\"\n             class=\"form-control\" name=\"Name\" #imageName=\"ngModel\" required minlength=\"2\">\n      <div [hidden]=\"!imageName.errors?.required\" class=\"invalid-feedback\"> Name is required</div>\n      <div [hidden]=\"!imageName.errors?.minlength\" class=\"invalid-feedback\"> Must be at least 2 characters</div>\n    </div>\n    <div class=\"form-group\">\n      <label>Description</label>\n      <textarea [(ngModel)]=\"description\" [ngClass]=\"{'is-invalid':imageDesc.errors && imageDesc.touched}\"\n                class=\"form-control\" name=\"Description\" #imageDesc=\"ngModel\" required minlength=\"2\">\n      </textarea>\n      <div [hidden]=\"!imageDesc.errors?.required\" class=\"invalid-feedback\"> Description is required</div>\n      <div [hidden]=\"!imageDesc.errors?.minlength\" class=\"invalid-feedback\"> Must be at least 2 characters</div>\n    </div>\n    <label class=\"mt-1\">Picture</label>\n    <div class=\"input-group mb-2\">\n      <div class=\"input-group-prepend\">\n        <span class=\"input-group-text\" id=\"inputGroupFileAddon\">Upload</span>\n      </div>\n      <div class=\"custom-file\">\n        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile\" name=\"picture\" (change)=\"onFileChanged($event)\"\n               aria-describedby=\"inputGroupFileAddon\">\n        <label class=\"custom-file-label\" for=\"inputGroupFile\">Choose file</label>\n      </div>\n    </div>\n    <button (click)=\"onSubmit()\" [disabled]=\"!imageForm.form.valid\" class=\"btn btn-dark col-12 my-2\">\n      Upload New Image\n    </button>\n  </form>\n  <img *ngIf=\"pictureSet\" [src]=\"picture\">\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'image-uploader-client';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <div class=\"mt-4\">\n        <flash-messages></flash-messages>\n    </div>\n    <router-outlet></router-outlet>\n</div>","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authService: AuthService\n    ) { }\n\n    canActivate(): Observable<boolean> {\n        return this.authService.verifyAuth().pipe(\n            map(res => {\n                if(res) {\n                    return true;\n                }\n                else {\n                    this.router.navigate(['/login']);\n                    return false;\n                }\n            })\n        );\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  faLock = faLock;\n\n  username: string;\n  password: string;\n\n  isLoggedIn = false;\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.verifyAuth().subscribe(res => {\n      if (res) {\n        this.isLoggedIn = true;\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.authService.login(this.username, this.password).subscribe(res => {\n      if (res) {\n        this.flashMessage.show('Successful login!', { cssClass: 'alert-success', timeout: 4000 });\n\n        this.router.navigate(['/']);\n        window.location.reload();\n      }\n    },\n      err => this.flashMessage.show(err.message, { cssClass: 'alert-danger', timeout: 4000 })\n    );\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <fa-icon class=\"text-primary\" [icon]=\"faLock\"></fa-icon> Login\n                </h1>\n                <form (submit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Login\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  faLock = faLock;\n\n  username: string;\n  password: string;\n\n  isLoggedIn = false;\n  constructor(\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.verifyAuth().subscribe(res => {\n      if (res) {\n        this.isLoggedIn = true;\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.authService.register(this.username, this.password).subscribe(res => {\n      if (res) {\n        this.flashMessage.show('Successful registration!', { cssClass: 'alert-success', timeout: 4000 });\n\n        this.router.navigate(['/login']);\n      }\n    },\n      err => this.flashMessage.show(err.message, { cssClass: 'alert-danger', timeout: 4000 })\n    );\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 mx-auto\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h1 class=\"text-center pb-4 pt-3\">\n                    <fa-icon class=\"text-primary\" [icon]=\"faLock\"></fa-icon> Register\n                </h1>\n                <form (submit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" name=\"username\" [(ngModel)]=\"username\" class=\"form-control\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required>\n                    </div>\n                    <input type=\"submit\" value=\"Register\" class=\"btn btn-primary btn-block\">\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {ImageListComponent} from './components/image-list/image-list.component';\nimport {ImageViewComponent} from './components/image-view/image-view.component';\nimport {ImageUploadComponent} from './components/image-upload/image-upload.component';\nimport {ImageEditComponent} from './components/image-edit/image-edit.component';\nimport {UsersComponent} from './components/users/users.component';\nimport {UserImagesComponent} from './components/user-images/user-images.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegisterComponent} from './components/register/register.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\nimport { ImageGridComponent } from './components/image-grid/image-grid.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ImageListComponent,\n    ImageViewComponent,\n    ImageUploadComponent,\n    ImageEditComponent,\n    UsersComponent,\n    UserImagesComponent,\n    LoginComponent,\n    RegisterComponent,\n    ImageGridComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    FontAwesomeModule,\n    BrowserAnimationsModule,\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Image} from '../../models/Image';\nimport {ImageService} from '../../services/image.service';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-image-edit',\n  templateUrl: './image-edit.component.html',\n  styleUrls: ['./image-edit.component.css']\n})\nexport class ImageEditComponent implements OnInit {\n  sessionId: string;\n\n  name: string;\n  description: string;\n\n  id: string;\n  image: Image;\n  loading = true;\n\n  constructor(\n    private imageService: ImageService,\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private router: Router) {\n    this.activatedRoute.paramMap.subscribe((data) => {\n      // @ts-ignore\n      this.id = data.params.imageId;\n    });\n    this.sessionId = this.authService.userData.userId;\n  }\n\n  ngOnInit(): void {\n    this.imageService.getImage(this.id).subscribe(image => {\n      // @ts-ignore\n      const imageBase64 = this.arrayBufferToBase64(image.body.img.data.data);\n      this.image = image.body;\n      this.name = this.image.name;\n      this.description = this.image.desc;\n      this.image.img.data = imageBase64;\n      if (this.image.user && this.image.user.id !== this.sessionId) {\n        this.router.navigate(['/']);\n      }\n      this.loading = false;\n    });\n  }\n\n  arrayBufferToBase64(buffer): string {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n  updateImage(id): void {\n    this.imageService.updateImage(id, this.name, this.description).subscribe(res => {\n        if (res) {\n          this.flashMessage.show('Image updated!', {cssClass: 'alert-success', timeout: 4000});\n\n          this.router.navigate(['image-view', id]);\n        }\n      },\n      err => this.flashMessage.show(err.message, {cssClass: 'alert-danger', timeout: 4000})\n    );\n  }\n}\n","<div class=\"card\" *ngIf=\"!loading\">\n  <div class=\"card-header\">\n    <div class=\"row\">\n      <input type=\"text\" class=\"col-auto mr-auto form-control w-50\" placeholder=\"Name\" [(ngModel)]=\"name\">\n      <div class=\"col-auto d-flex\">\n        <button class=\"btn btn-success mr-2\" (click)=\"updateImage(image._id)\">Save</button>\n      </div>\n    </div>\n\n  </div>\n  <div class=\"card-body pb-5\">\n    <div class=\"row justify-content-md-center\">\n      <img class=\"col-12 col-md-12 col-lg-6\" [src]=\"'data:image/jpg;base64,' + image.img.data\">\n      <div class=\"col-12 col-md-12 col-lg-6\">\n        <h4>Description</h4>\n        <textarea class=\"form-control\" style=\"height:90%; resize: vertical;\" [(ngModel)]=\"description\"></textarea>\n      </div>\n    </div>\n  </div>\n</div>\n<h3 *ngIf=\"loading\">Loading...</h3>\n","import {Component, OnInit} from '@angular/core';\nimport {Image} from '../../models/Image';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {UserService} from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-images',\n  templateUrl: './user-images.component.html',\n  styleUrls: ['./user-images.component.css']\n})\nexport class UserImagesComponent implements OnInit {\n  images: Image[];\n  user: string;\n  id: string;\n\n  constructor(private userService: UserService, private activatedRoute: ActivatedRoute) {\n    this.activatedRoute.paramMap.subscribe((data) => {\n      // @ts-ignore\n      this.user = data.params.userName;\n      // @ts-ignore\n      this.id = data.params.userId;\n    });\n  }\n\n  ngOnInit(): void {\n    this.userService.getUserImages(this.id).subscribe(images => {\n      this.images = images.body;\n    });\n  }\n}\n","<h1 class=\"text-center\">{{user}} images</h1>\n<app-image-grid [images]=\"images\"></app-image-grid>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Image} from '../../models/Image';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-image-grid',\n  templateUrl: './image-grid.component.html',\n  styleUrls: ['./image-grid.component.css']\n})\nexport class ImageGridComponent implements OnInit {\n  @Input() images: Image[];\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  imageView(id: string): void {\n    this.router.navigate(['image-view', id]);\n  }\n}\n","<div class=\"masonry-wrapper\">\n  <div class=\"masonry\">\n    <div class=\"masonry-item\" *ngFor=\"let image of images\">\n      <img [src]=\"'data:image/jpg;base64,' + image.img.data\" class=\"masonry-content\">\n      <div class=\"overlay\" (click)=\"imageView(image._id)\">{{image.name}}</div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  userId: string = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.verifyAuth().subscribe(res => this.isLoggedIn = res);\n    this.userId = this.authService.userData.userId\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.isLoggedIn = false;\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n    <a routerLink=\"/\" class=\"navbar-brand\">Image uploader</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMain\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a routerLink=\"/\" class=\"nav-link\">Images</a>\n            </li>\n            <li class=\"nav-item\">\n                <a routerLink=\"/users\" class=\"nav-link\">Users</a>\n            </li>\n        </ul>\n\n        <ul class=\"navbar-nav ml-auto\">\n            <li *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n                <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n            </li>\n            <li *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n                <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n            </li>\n            <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                <a [routerLink]=\"['/user-images', userId, 'Own']\" class=\"nav-link\">Own images</a>\n            </li>\n            <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                <a routerLink=\"/image-upload\" class=\"nav-link\">Upload image</a>\n            </li>\n            <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n                <a routerLink=\"/login\" (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>\n","import {Injectable} from '@angular/core';\nimport {UserData} from '../models/UserData';\nimport {environment} from '../../environments/environment';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map, catchError} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-type': 'application/json'}),\n  observe: 'response' as 'response'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) {\n    if (sessionStorage.getItem('userData') != null) {\n      const data = JSON.parse(sessionStorage.getItem('userData'));\n      this.userData.userId = data.userId;\n      this.userData.token = data.token;\n    }\n  }\n\n  userData: UserData = {\n    userId: '',\n    token: ''\n  };\n\n  private static setSession(userData: UserData): void {\n    sessionStorage.setItem('userData', JSON.stringify(userData));\n  }\n\n  verifyAuth(): Observable<boolean> {\n    if (this.userData.token != '') {\n      return this.http.post(`${environment.apiBaseUrl}/verify`, {token: this.userData.token}, httpOptions).pipe(\n        map(res => {\n          return true;\n        }),\n        catchError(err => {\n          this.clearSession();\n          return of(false);\n        })\n      );\n    } else {\n      return of(false);\n    }\n  }\n\n  login(username: string, password: string): Observable<boolean> {\n    return this.http.post(`${environment.apiBaseUrl}/login`, {username, password}, httpOptions).pipe(\n      map(res => {\n        const response = res.body as { token: string, id: string };\n        const userData: UserData = {\n          userId: '',\n          token: null\n        };\n\n        userData.userId = response.id;\n        userData.token = response.token;\n\n        if (userData.token != '') {\n          AuthService.setSession(userData);\n          return true;\n        }\n        return false;\n      }));\n  }\n\n  register(username: string, password: string) {\n    return this.http.post(`${environment.apiBaseUrl}/register`, {username, password}, httpOptions);\n  }\n\n  logout(): void {\n    this.clearSession();\n  }\n\n  private clearSession(): void {\n    sessionStorage.removeItem('userData');\n    this.userData = {\n      userId: '',\n      token: ''\n    };\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ImageService} from '../../services/image.service';\nimport {Image} from '../../models/Image';\n\n@Component({\n  selector: 'app-image-list',\n  templateUrl: './image-list.component.html',\n  styleUrls: ['./image-list.component.css']\n})\nexport class ImageListComponent implements OnInit {\n  images: Image[];\n\n  constructor(private imageService: ImageService) {\n  }\n\n  ngOnInit(): void {\n    this.imageService.getImages().subscribe(images => {\n      this.images = images.body;\n    });\n  }\n}\n","<h1 class=\"text-center\">All images</h1>\n<app-image-grid [images]=\"images\"></app-image-grid>\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Image} from '../models/Image';\nimport {AuthService} from './auth.service';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-type': 'application/json'}),\n  observe: 'response' as 'response'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(private http: HttpClient, private authService: AuthService) {\n  }\n\n  getImages(): Observable<HttpResponse<Image[]>> {\n    return this.http.get<Image[]>(`${environment.apiBaseUrl}/images`, httpOptions);\n  }\n\n  getImage(id: string): Observable<HttpResponse<Image>> {\n    return this.http.get<Image>(`${environment.apiBaseUrl}/image/${id}`, httpOptions);\n  }\n\n  postImage(image: string, name: string, desc: string): Observable<HttpResponse<object>> {\n    const options = new HttpHeaders({'Content-type': 'application/json', token: this.authService.userData.token});\n    const body = {image, name, desc};\n    console.log(body);\n    return this.http.post(`${environment.apiBaseUrl}/upload`, body, {headers: options, observe: 'response' as 'response'});\n  }\n\n  updateImage(id: string, name: string, desc: string): Observable<HttpResponse<object>> {\n    const options = new HttpHeaders({'Content-type': 'application/json', token: this.authService.userData.token});\n    return this.http.put(`${environment.apiBaseUrl}/image/${id}`, {name, desc}, {headers: options, observe: 'response' as 'response'});\n  }\n\n  deleteImage(id: string): Observable<HttpResponse<object>> {\n    const options = new HttpHeaders({'Content-type': 'application/json', token: this.authService.userData.token});\n    return this.http.delete(`${environment.apiBaseUrl}/image/${id}`, {headers: options, observe: 'response' as 'response'});\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../../environments/environment';\nimport {User} from '../models/User';\nimport {Image} from '../models/Image';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-type': 'application/json'}),\n  observe: 'response' as 'response'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getUsers(): Observable<HttpResponse<User[]>> {\n    return this.http.get<User[]>(`${environment.apiBaseUrl}/users`, httpOptions);\n  }\n\n  getUserImages(id: string): Observable<HttpResponse<Image[]>> {\n    return this.http.get<Image[]>(`${environment.apiBaseUrl}/user/${id}`, httpOptions);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImageEditComponent } from './components/image-edit/image-edit.component';\nimport { ImageListComponent } from './components/image-list/image-list.component';\nimport { ImageUploadComponent } from './components/image-upload/image-upload.component';\nimport { ImageViewComponent } from './components/image-view/image-view.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { UserImagesComponent } from './components/user-images/user-images.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'image-list', component: ImageListComponent },\n  { path: 'image-view/:imageId', component: ImageViewComponent },\n  { path: 'image-upload', component: ImageUploadComponent, canActivate: [AuthGuard] },\n  { path: 'image-edit/:imageId', component: ImageEditComponent, canActivate: [AuthGuard] },\n  { path: 'users', component: UsersComponent },\n  { path: 'user-images/:userId/:userName', component: UserImagesComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: '', redirectTo: 'image-list', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}